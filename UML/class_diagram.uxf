<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <help_text>// Uncomment the following line to change the fontsize and font: 
fontsize=12
fontfamily=Monospaced 
//possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Cmd to select multiple elements
// Use Cmd+mouse to select via lasso
//
// Use +/- or Cmd+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Cmd+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>5</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>430</x>
      <y>465</y>
      <w>230</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>/Piece/
-
# color : PieceColor
# pieceType : Piecetype
# character : string
# literalCharacter : char
# position : Coordinate
-
+ ~Piece()
+ {abstract} ToString(literal : bool = false) : string
+ {abstract} IsMoveValid(endigPosition : Coordinate) : bool
+ GetColor() : PieceColor
+ GetType() : PieceType
+ GetPosition() : Coordinate
+ {virtual} Move(newPosition : Coordinate) : void
+ {virtual} CanCastle() : bool
+ {virtual} GetDoubleAdvancementMoveNumber() : int


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>140</x>
      <y>195</y>
      <w>50</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>PieceColor
«enumeration»
-
WHITE
BLACK
VOID
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>75</x>
      <y>195</y>
      <w>50</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>GameStatus
«enumeration»
-
PLAYING
CHECKMATE
STALEMATE
MATERIL_LACK
REPETITION</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>405</x>
      <y>135</y>
      <w>280</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>Board
&lt;&lt;singleton&gt;&gt;
-
- squaresMap : map
- whitePieces : vector
- blackPieces : vector
- whiteCapturedPieces : vector
- blackCapturedPieces : vector
- whiteKing : shared_ptr
- blackKing : shared_ptr
- moveNumber : int
-
- Board()
_+ Instance() : Board&amp;_
- Castling(king : shared_ptr, kingEndingPosition : Coordinate) : void
- EnPassant(pawn : shared_ptr, pawnEndingPosition : Coordinate) : void
- IsSquareAttacked(square : Coordinate, attackerColor : PieceColor) : bool
+ PrintWhiteBoard(simplified : bool) : void 
+ PrintBlackBoard(simplified : bool) : void 
+ UpdateSquare(square : pair) : void
+ UpdatePiecesVector(newPiece : shared_ptr) : void
+ AddKings() : void
+ IsKingInCheck(kingColor : PieceColor) : bool
+ HasValidMoves(playerColor : PieceColor) : bool
+ IsMaterialLacking() : bool
+ NormalMove(movingPiece : shared_ptr, endingPosition : Coordinate) : void
+ GetPiece(position : Coordinate) : shared_ptr
+ ClearBoard() : void
+ ResetMoveNumber() : void
+ IncrementMoveNumber(increment : int) : void
+ GetMoveNumber() : int
+ GetWhiteCapturedPieces() : string
+ GetBlackCapturedPieces() : string
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>795</x>
      <y>145</y>
      <w>345</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>GameManager
-
- activePlayerColor : PieceColor
- gameStatus : GameStatus
- simplified : bool
- welcomeFile : fstream
- helpFile : fstream
- settingsFile : fstream
-
- LoadFenPosition(fenString : string) : void
- InitializeStartingBoard() : void
- HelpUser() : void
- UserSettings() : void
- GetUserMove() : void
- KillGame() : void
- UpdateGameStatus() : void
_+ makePiece(pieceChar : char, pPosition : Coordinate, hasRookMoved : bool = true) : shared_ptr_
+ startGame() : void
+ gameLoop() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>840</x>
      <y>740</y>
      <w>245</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>Movement
-
- x : int
- y :int
-
+ Movement(newX : int = 0, newY : int = 0)
+ Movement(newMovement : Movement)
+ ~Movement()
+ SetX(newX : int) : Movement&amp;
+ SetY(newY : int) : Movement&amp;
+ GetX() : int
+ GetY() : int
+ operator=(newMovement : Movement) : Movement&amp;
+ operator&lt;(other : Movement) : bool
+ operator&gt;(other : Movement) : bool
+ operator==(other : Movement) : bool
+ operator!=(other : Movement) : bool
+ operator&lt;=(other : Movement) : bool
+ operator&gt;=(other : Movement) : bool
+ operator*(multiplier : int) : Movement

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>520</x>
      <y>725</y>
      <w>245</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>Coordinate
-
_- literalChars : string_
- x : int
- y :int
-
+ Coordinate(newX : int, newY : int)
+ Coordinate(literalNewX : char, newY : int)
+ Coordinate(literalExpression : string_view)
+ ~Coordinate()
+ Coordinate(newCoordinate : Coordinate)
+ SetX(newX : int) : Coordinate&amp;
+ SetY(newY : int) : Coordinate&amp;
+ GetX() : int
+ GetY() : int
+ operator=(newCoordinate : Coordinate) : Coordinate&amp;
+ operator&lt;(other : Coordinate) : bool
+ operator&gt;(other : Coordinate) : bool
+ operator==(other : Coordinate) : bool
+ operator!=(other : Coordinate) : bool
+ operator&lt;=(other : Coordinate) : bool
+ operator&gt;=(other : Coordinate) : bool
+ operator+(movement : Movement) : Coordinate
+ operator+=(movement : Movement) : Coordinate&amp;
+ SquaredDistance(other : Coordinate) : int
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>475</y>
      <w>200</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Knight
-
+ Knight(pColor : PieceColor, pPosition : Coordinate)
+ ~Knight()
+ ToString(simplified : bool) : string
+ IsMoveValid(endingPosition : Coordinate) : bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>355</y>
      <w>200</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>VoidPiece
-
+ VoidPiece(pPosition : Coordinate)
+ ~VoidPiece()
+ ToString(simplified : bool) : string
+ IsMoveValid(endingPosition : Coordinate) : bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>535</y>
      <w>200</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Queen
-
+ Queen(pColor : PieceColor, pPosition : Coordinate)
+ ~Queen()
+ ToString(simplified : bool) : string
+ IsMoveValid(endingPosition : Coordinate) : bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>595</y>
      <w>255</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Rook
-
- hasMoved : bool
-
+ Rook(pColor : PieceColor, pPosition : Coordinate, hasMoved : bool)
+ ~Rook()
+ ToString(simplified : bool) : string
+ IsMoveValid(endingPosition : Coordinate) : bool
+ CanCastle() : bool
+ Move(newPosition : Coordinate) : void </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>680</y>
      <w>255</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>King
-
- hasMoved : bool
-
+ King(pColor : PieceColor, pPosition : Coordinate, hasMoved : bool)
+ ~King()
+ ToString(simplified : bool) : string
+ IsMoveValid(endingPosition : Coordinate) : bool
+ CanCastle() : bool
+ Move(newPosition : Coordinate) : void </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>765</y>
      <w>255</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>Pawn
-
- hasMoved : bool
- doubleAdvancementMoveNumber : int
-
+ Pawn(pColor : PieceColor, pPosition : Coordinate, hasMoved : bool)
+ ~Pawn()
+ ToString(simplified : bool) : string
+ IsMoveValid(endingPosition : Coordinate) : bool
+ Move(newPosition : Coordinate) : void 
+ GetDoubleAdvancementMoveNumber() : int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>415</y>
      <w>200</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Bishop
-
+ Bishop(pColor : PieceColor, pPosition : Coordinate)
+ ~Bishop()
+ ToString(simplified : bool) : string
+ IsMoveValid(endingPosition : Coordinate) : bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>195</x>
      <y>370</y>
      <w>160</w>
      <h>20</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;300.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>195</x>
      <y>430</y>
      <w>160</w>
      <h>20</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;300.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>195</x>
      <y>490</y>
      <w>160</w>
      <h>20</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;300.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>195</x>
      <y>550</y>
      <w>160</w>
      <h>20</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;300.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>250</x>
      <y>625</y>
      <w>105</w>
      <h>20</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;190.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>250</x>
      <y>710</y>
      <w>105</w>
      <h>20</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;190.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>250</x>
      <y>795</y>
      <w>105</w>
      <h>20</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;190.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>340</x>
      <y>375</y>
      <w>15</w>
      <h>440</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;860.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>340</x>
      <y>580</y>
      <w>215</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>410.0;10.0;410.0;50.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>635</x>
      <y>580</y>
      <w>15</w>
      <h>155</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;290.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>540</x>
      <y>360</y>
      <w>15</w>
      <h>115</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;210.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>760</x>
      <y>810</y>
      <w>90</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>160.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>680</x>
      <y>220</y>
      <w>125</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>m1=1
m2=1
</panel_attributes>
    <additional_attributes>230.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>590</x>
      <y>360</y>
      <w>145</w>
      <h>375</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0;270.0;80.0;270.0;730.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>655</x>
      <y>270</y>
      <w>320</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;520.0;620.0;520.0;620.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5</x>
      <y>195</y>
      <w>50</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>PieceType
«enumeration»
-
PAWN
ROOK
KNIGHT
BISHOP
QUEEN
KING
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
