<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <help_text>// Uncomment the following line to change the fontsize and font: 
fontsize=12
fontfamily=Monospaced 
//possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Cmd to select multiple elements
// Use Cmd+mouse to select via lasso
//
// Use +/- or Cmd+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Cmd+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>120</x>
      <y>80</y>
      <w>368</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>/Piece/
-
# color : PieceColor
# pieceType : Piecetype
# character : string
# literalCharacter : char
# position : Coordinate
-
+ ~Piece()
+ {abstract} toString(literal : bool = false) : string
+ {abstract} isMoveValid(endigPosition : Coordinate) : bool
+ getColor() : PieceColor
+ getType() : PieceType
+ getPosition() : Coordinate
+ {virtual} move(newPosition : Coordinate) : void
+ {virtual} canCastle() : bool


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>80</y>
      <w>80</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>PieceColor
«enumeration»
-
WHITE
BLACK
VOID
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>160</y>
      <w>80</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>PieceType
«enumeration»
-
PAWN
ROOK
KNIGHT
BISHOP
QUEEN
KING
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>120</x>
      <y>272</y>
      <w>448</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>Board
&lt;&lt;singleton&gt;&gt;
-
- squaresMap : map
- whitePieces : vector
- blackPieces : vector
- whiteCapturedPieces : vector
- blackCapturedPieces : vector
- whiteKing : shared_ptr
- blackKing : shared_ptr
-
- Board()
- castling(king : shared_ptr, kingEndingPosition : Coordinate) : void
_+ Instance() : Board&amp;_
+ printWhiteBoard(simplified : bool = false) : void 
+ printBlackBoard(simplified : bool = false) : void 
+ updateSquare(square : pair) : void
+ updatePiecesVector(newPiece : shared_ptr) : void
+ addKings() : void
+ isSquareAttacked(square : Coordinate, attackerColor : PieceColor) : bool
+ normalMove(movingPiece : shared_ptr, endingPosition : Coordinate) : void
+ getPiece(position : Coordinate) : shared_ptr
+ clearBoard() : void
+ getWhiteCapturedPieces() : string
+ getBlackCapturedPieces() : string
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>120</x>
      <y>592</y>
      <w>552</w>
      <h>256</h>
    </coordinates>
    <panel_attributes>GameManager
-
_- regexRuleNormal : regex_
_- regexRulePromotion : regex_
- activePlayerColor : PieceColor
- gameFinished : bool
- simplified : bool
- welcomeFile : fstream
- helpFile : fstream
- settingsFile : fstream
- welcomeFilePath : const char*
- helpFilePath : const char*
- settingsFilePath : const char*
-
- helpUser() : void
- userSettings() : void
- getUserMove() : void
- killGame() : void
- loadFenPosition(fenString : string) : void
- InitializeStartingBoard() : void
_# makePiece(pieceChar : char, pPosition : Coordinate, hasRookMoved : bool = true) : shared_ptr_
+ startGame() : void
+ gameLoop() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>880</x>
      <y>80</y>
      <w>392</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>Coordinate
-
_- literalChars : string_
- x : int
- y :int
-
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
