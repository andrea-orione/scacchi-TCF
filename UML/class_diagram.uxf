<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <help_text>// Uncomment the following line to change the fontsize and font: 
fontsize=12
fontfamily=Monospaced 
//possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Cmd to select multiple elements
// Use Cmd+mouse to select via lasso
//
// Use +/- or Cmd+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Cmd+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>4</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>472</x>
      <y>564</y>
      <w>184</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>/Piece/
-
# color : PieceColor
# pieceType : Piecetype
# character : string
# literalCharacter : char
# position : Coordinate
-
+ ~Piece()
+ {abstract} toString(literal : bool = false) : string
+ {abstract} isMoveValid(endigPosition : Coordinate) : bool
+ getColor() : PieceColor
+ getType() : PieceType
+ getPosition() : Coordinate
+ {virtual} move(newPosition : Coordinate) : void
+ {virtual} canCastle() : bool


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>72</x>
      <y>16</y>
      <w>40</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>PieceColor
«enumeration»
-
WHITE
BLACK
VOID
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>72</x>
      <y>56</y>
      <w>40</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>PieceType
«enumeration»
-
PAWN
ROOK
KNIGHT
BISHOP
QUEEN
KING
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>132</x>
      <y>112</y>
      <w>224</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>Board
&lt;&lt;singleton&gt;&gt;
-
- squaresMap : map
- whitePieces : vector
- blackPieces : vector
- whiteCapturedPieces : vector
- blackCapturedPieces : vector
- whiteKing : shared_ptr
- blackKing : shared_ptr
-
- Board()
- castling(king : shared_ptr, kingEndingPosition : Coordinate) : void
_+ Instance() : Board&amp;_
+ printWhiteBoard(simplified : bool = false) : void 
+ printBlackBoard(simplified : bool = false) : void 
+ updateSquare(square : pair) : void
+ updatePiecesVector(newPiece : shared_ptr) : void
+ addKings() : void
+ isSquareAttacked(square : Coordinate, attackerColor : PieceColor) : bool
+ normalMove(movingPiece : shared_ptr, endingPosition : Coordinate) : void
+ getPiece(position : Coordinate) : shared_ptr
+ clearBoard() : void
+ getWhiteCapturedPieces() : string
+ getBlackCapturedPieces() : string
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>132</x>
      <y>264</y>
      <w>276</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>GameManager
-
_- regexRuleNormal : regex_
_- regexRulePromotion : regex_
- activePlayerColor : PieceColor
- gameFinished : bool
- simplified : bool
- welcomeFile : fstream
- helpFile : fstream
- settingsFile : fstream
- welcomeFilePath : const char*
- helpFilePath : const char*
- settingsFilePath : const char*
-
- helpUser() : void
- userSettings() : void
- getUserMove() : void
- killGame() : void
- loadFenPosition(fenString : string) : void
- InitializeStartingBoard() : void
_# makePiece(pieceChar : char, pPosition : Coordinate, hasRookMoved : bool = true) : shared_ptr_
+ startGame() : void
+ gameLoop() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>492</x>
      <y>160</y>
      <w>196</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>Movement
-
- x : int
- y :int
-
+ Movement(newX : int = 0, newY : int = 0)
+ Movement(newMovement : Movement)
+ ~Movement()
+ setX(newX : int) : Movement&amp;
+ setY(newY : int) : Movement&amp;
+ getX() : int
+ getY() : int
+ operator=(newMovement : Movement) : Movement&amp;
+ operator&lt;(other : Movement) : bool
+ operator&gt;(other : Movement) : bool
+ operator==(other : Movement) : bool
+ operator!=(other : Movement) : bool
+ operator&lt;=(other : Movement) : bool
+ operator&gt;=(other : Movement) : bool
+ operator*(multiplier : int) : Movement

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>492</x>
      <y>12</y>
      <w>196</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>Coordinate
-
_- literalChars : string_
- x : int
- y :int
-
+ Coordinate(newX : int, newY : int)
+ Coordinate(literalNewX : char, newY : int)
+ Coordinate(literalExpression : string_view)
+ ~Coordinate()
+ Coordinate(newCoordinate : Coordinate)
+ setX(newX : int) : Coordinate&amp;
+ setY(newY : int) : Coordinate&amp;
+ getX() : int
+ getY() : int
+ operator=(newCoordinate : Coordinate) : Coordinate&amp;
+ operator&lt;(other : Coordinate) : bool
+ operator&gt;(other : Coordinate) : bool
+ operator==(other : Coordinate) : bool
+ operator!=(other : Coordinate) : bool
+ operator&lt;=(other : Coordinate) : bool
+ operator&gt;=(other : Coordinate) : bool
+ operator+(movement : Movement) : Coordinate
+ operator+=(movement : Movement) : Coordinate&amp;
+squaredDistance(other : Coordinate) : int
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>128</x>
      <y>556</y>
      <w>160</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>Knight
-
+ Knight(pColor : PieceColor, pPosition : Coordinate)
+ ~Knight()
+ toString(simplified : bool) : string
+ isMoveValid(endingPosition : Coordinate) : bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>128</x>
      <y>460</y>
      <w>160</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>VoidPiece
-
+ VoidPiece(pPosition : Coordinate)
+ ~VoidPiece()
+ toString(simplified : bool) : string
+ isMoveValid(endingPosition : Coordinate) : bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>128</x>
      <y>604</y>
      <w>160</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>Queen
-
+ Queen(pColor : PieceColor, pPosition : Coordinate)
+ ~Queen()
+ toString(simplified : bool) : string
+ isMoveValid(endingPosition : Coordinate) : bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>128</x>
      <y>652</y>
      <w>204</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>Rook
-
- hasMoved : bool
-
+ Rook(pColor : PieceColor, pPosition : Coordinate, hasMoved : bool)
+ ~Rook()
+ toString(simplified : bool) : string
+ isMoveValid(endingPosition : Coordinate) : bool
+ canCastle() : bool
+ move(newPosition : Coordinate) : void </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>128</x>
      <y>720</y>
      <w>204</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>King
-
- hasMoved : bool
-
+ King(pColor : PieceColor, pPosition : Coordinate, hasMoved : bool)
+ ~King()
+ toString(simplified : bool) : string
+ isMoveValid(endingPosition : Coordinate) : bool
+ canCastle() : bool
+ move(newPosition : Coordinate) : void </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>128</x>
      <y>788</y>
      <w>204</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>Pawn
-
- hasMoved : bool
- doubleAdvancementMoveNumber : int
-
+ Pawn(pColor : PieceColor, pPosition : Coordinate, hasMoved : bool)
+ ~Pawn()
+ toString(simplified : bool) : string
+ isMoveValid(endingPosition : Coordinate) : bool
+ move(newPosition : Coordinate) : void </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>128</x>
      <y>508</y>
      <w>160</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>Bishop
-
+ Bishop(pColor : PieceColor, pPosition : Coordinate)
+ ~Bishop()
+ toString(simplified : bool) : string
+ isMoveValid(endingPosition : Coordinate) : bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>284</x>
      <y>472</y>
      <w>128</w>
      <h>16</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;300.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>284</x>
      <y>520</y>
      <w>128</w>
      <h>16</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;300.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>284</x>
      <y>568</y>
      <w>128</w>
      <h>16</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;300.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>284</x>
      <y>616</y>
      <w>128</w>
      <h>16</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;300.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>328</x>
      <y>676</y>
      <w>84</w>
      <h>16</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;190.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>328</x>
      <y>744</y>
      <w>84</w>
      <h>16</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;190.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>328</x>
      <y>812</y>
      <w>84</w>
      <h>16</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;190.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>400</x>
      <y>476</y>
      <w>12</w>
      <h>352</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;860.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>400</x>
      <y>648</y>
      <w>172</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>410.0;10.0;410.0;30.0;10.0;30.0</additional_attributes>
  </element>
</diagram>
